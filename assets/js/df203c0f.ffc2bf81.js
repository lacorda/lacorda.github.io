"use strict";(globalThis.webpackChunklacorda_github_io=globalThis.webpackChunklacorda_github_io||[]).push([[4279],{33908:(e,t,l)=>{l.r(t),l.d(t,{default:()=>d});var a=l(37953),r=l(68835),n=l(12580),o=l(65895),s=l(47005),c=l(55285),i=l(76256),u=l(2551),g=l(44692);function m({doc:e}){return a.createElement("article",{className:"margin-vert--lg"},a.createElement(n.A,{to:e.permalink},a.createElement("h2",null,e.title)),e.description&&a.createElement("p",null,e.description))}function d({tag:e}){const t=function(){const{selectMessage:e}=(0,o.W)();return t=>e(t,(0,i.T)({id:"theme.docs.tagDocListPageTitle.nDocsTagged",description:'Pluralized label for "{count} docs tagged". Use as much plural forms (separated by "|") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',message:"One doc tagged|{count} docs tagged"},{count:t}))}(),l=(0,i.T)({id:"theme.docs.tagDocListPageTitle",description:"The title of the page for a docs tag",message:'{nDocsTagged} with "{tagName}"'},{nDocsTagged:t(e.count),tagName:e.label});return a.createElement(c.e3,{className:(0,r.A)(s.G.wrapper.docsPages,s.G.page.docsTagDocListPage)},a.createElement(c.be,{title:l}),a.createElement(g.A,{tag:"doc_tag_doc_list"}),a.createElement(u.A,null,a.createElement("div",{className:"container margin-vert--lg"},a.createElement("div",{className:"row"},a.createElement("main",{className:"col col--8 col--offset-2"},a.createElement("header",{className:"margin-bottom--xl"},a.createElement("h1",null,l),a.createElement(n.A,{href:e.allTagsPath},a.createElement(i.A,{id:"theme.tags.tagsPageLink",description:"The label of the link targeting the tag list page"},"View All Tags"))),a.createElement("section",{className:"margin-vert--lg"},e.items.map(e=>a.createElement(m,{key:e.id,doc:e}))))))))}},65895:(e,t,l)=>{l.d(t,{W:()=>i});var a=l(37953),r=l(5243);const n=["zero","one","two","few","many","other"];function o(e){return n.filter(t=>e.includes(t))}const s={locale:"en",pluralForms:o(["one","other"]),select:e=>1===e?"one":"other"};function c(){const{i18n:{currentLocale:e}}=(0,r.A)();return(0,a.useMemo)(()=>{try{return function(e){const t=new Intl.PluralRules(e);return{locale:e,pluralForms:o(t.resolvedOptions().pluralCategories),select:e=>t.select(e)}}(e)}catch(t){return console.error(`Failed to use Intl.PluralRules for locale "${e}".\nDocusaurus will fallback to the default (English) implementation.\nError: ${t.message}\n`),s}},[e])}function i(){const e=c();return{selectMessage:(t,l)=>function(e,t,l){const a=e.split("|");if(1===a.length)return a[0];a.length>l.pluralForms.length&&console.error(`For locale=${l.locale}, a maximum of ${l.pluralForms.length} plural forms are expected (${l.pluralForms.join(",")}), but the message contains ${a.length}: ${e}`);const r=l.select(t),n=l.pluralForms.indexOf(r);return a[Math.min(n,a.length-1)]}(l,t,e)}}}}]);